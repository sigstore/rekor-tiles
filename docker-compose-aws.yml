#
# Copyright 2025 The Sigstore Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Docker Compose configuration for testing AWS backend with MinIO and MySQL

services:
  # MinIO - S3-compatible object storage
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - minio_data:/data

  # MinIO Client - Create bucket on startup
  minio_init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin;
      mc mb myminio/tiles --ignore-existing;
      mc anonymous set public myminio/tiles;
      exit 0;
      "

  # MySQL - Aurora-compatible database for sequencing and antispam
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=sequencer
      - MYSQL_USER=rekor
      - MYSQL_PASSWORD=rekorpassword
    command:
      - --default-authentication-plugin=mysql_native_password
      - --max_connections=1000
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - mysql_data:/var/lib/mysql

  # Rekor server with AWS backend
  rekor_aws:
    build:
      context: .
      target: deploy
    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_S3_FORCE_PATH_STYLE=true
    command:
      - "rekor-server"
      - "serve"
      - "--http-address=0.0.0.0"
      - "--grpc-address=0.0.0.0"
      - "--hostname=rekor-local-aws"
      - "--aws-bucket=tiles"
      - "--aws-mysql-dsn=rekor:rekorpassword@tcp(mysql:3306)/sequencer?parseTime=true"
      - "--signer-filepath=/pki/ed25519-priv-key.pem"
      - "--checkpoint-interval=2s"
      - "--log-level=debug"
      - "--request-response-logging=true"
      - "--persistent-antispam"
    ports:
      - "3004:3000" # http port (different from GCP to avoid conflicts)
      - "3002:3001" # grpc port
      - "2115:2112" # metrics port
    healthcheck:
      test:
        - CMD-SHELL
        - curl http://localhost:3000/healthz | grep '{"status":"SERVING"}'
      timeout: 30s
      retries: 10
      interval: 3s
    volumes:
      - ./tests/testdata/pki:/pki
    depends_on:
      minio_init:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy

volumes:
  minio_data: {}
  mysql_data: {}
