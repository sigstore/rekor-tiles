#
# Copyright 2025 The Sigstore Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

services:
  spanner:
    image: gcr.io/cloud-spanner-emulator/emulator:1.5.32@sha256:d2a853e5a4c1a8c9f5e7a695a12ecd3ed46335d8f918989c78a0f1675ab4bdc3
  gcs:
    image: fsouza/fake-gcs-server:1.52.2@sha256:d47b4cf8b87006cab8fbbecfa5f06a2a3c5722e464abddc0d107729663d40ec4
    volumes:
    - bucket:/data/tiles:rw
    command:
    - "-scheme=http"
    - "-port=7080"
    - "-public-host=localhost:7080"
    ports:
    - "7080:7080"
  rekor_init:
    build:
      context: .
      dockerfile: Dockerfile.emulator_init
    environment:
    - GCP_PROJECT=rekor-tiles-e2e
    - SPANNER_INSTANCE=rekor-tiles
    - SPANNER_DB=sequencer
    - SPANNER_EMULATOR_REST_HOST=http://spanner:9020/
    - SPANNER_EMULATOR_HOST=spanner:9010
    healthcheck:
      test:
      - CMD-SHELL
      - "test -f /root/finished"
      timeout: 10s
      retries: 4
    depends_on:
    - spanner
    - gcs
  rekor:
    build:
      context: .
      target: deploy
    environment:
    - SPANNER_EMULATOR_HOST=spanner:9010
    - STORAGE_EMULATOR_HOST=gcs:7080
    command:
    - "rekor-server"
    - "serve"
    - "--http-address=0.0.0.0"
    - "--grpc-address=0.0.0.0"
    - "--hostname=rekor-local"
    - "--gcp-bucket=tiles"
    - "--gcp-spanner=projects/rekor-tiles-e2e/instances/rekor-tiles/databases/sequencer"
    - "--signer-filepath=/pki/ed25519-priv-key.pem"
    - "--checkpoint-interval=2s"
    ports:
    - "3003:3000" # http port
    - "3001:3001" # grpc port
    - "2114:2112" # metrics port
    healthcheck:
      test:
      - CMD-SHELL
      - curl http://localhost:3000/healthz | grep '{"status":"SERVING"}'
      timeout: 30s
      retries: 10
      interval: 3s
      # requires docker engine >= v25
      # start_period: 5s
      # start_interval: 1s
    volumes:
    - ./tests/testdata/pki:/pki
    depends_on:
      rekor_init:
        condition: service_completed_successfully
volumes:
  bucket: {}
